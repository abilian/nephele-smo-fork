[project]
name = "smo"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Stefane Fermigier", email = "sf@abilian.com" }
]
requires-python = ">=3.10"
dependencies = [
    "flask>=3.1.0",
    "werkzeug>=3.1.3",
    "flasgger>=0.9.7.1",
    # Persistence
    "sqlalchemy>=2.0.36",
    "flask-sqlalchemy>=3.1.1",
    "psycopg2-binary>=2.9.10",
    # Other libraries
    "gurobipy>=12.0.0",
    "kubernetes>=31.0.0",
    "python-dotenv>=1.0.1",
    "pyyaml>=6.0.2",
    "requests>=2.32.3",
    # Unneeded?
    # "google-auth>=2.36.0",
    # "pyasn1>=0.6.1",
    # "python-dateutil>=2.9.0.post0",
    # "rsa>=4.9",
    # "websocket-client>=1.8.0",
    # Temp
    "devtools>=0.12.2",
    "alembic>=1.14.0",
]

[project.scripts]
smo = "smo.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    # Basic tools
    "abilian-devtools>=0.7.4",
    # Testing addons
    "coverage>=7.6.7",
    # Formatting addons
    "docformatter>=1.7.5",
    # Runtime type checking
    "typeguard>=4.4.1",
    "beartype>=0.19.0",
    "pytest-beartype>=0.2.0",
    # Type hints
    "types-pyyaml>=6.0.12.20240917",
    "types-requests>=2.32.0.20241016",
    # Architecture layering testing
    "pytest-archon>=0.0.6",
    # SBOM generation
    "cyclonedx-bom>=4.6.1",
    "spdx-tools>=0.8.3",
]

# -----------------------------------------------------------------------------

[tool.pytest]
python_files = "test_*.py *_test.py tests.py"

[tool.pytest.ini_options]
addopts = "--disable-warnings --disable-pytest-warnings --ignore=src/app/sandbox/ --tb=short --doctest-modules"
filterwarnings = [
    'ignore:.*contextfunction.*:DeprecationWarning',
    'ignore:.*Unmanaged.*:sqlalchemy.exc.SAWarning',
]
testpaths = ["tests", "src"]

# -----------------------------------------------------------------------------

[tool.pyanalyze]
paths = ["src/"]
import_paths = ["."]

# -----------------------------------------------------------------------------

[tool.deptry.per_rule_ignores]
# X defined as a dependency but not used in the codebase
DEP002 = [
    # Used (implicitely) by SQLA
    'psycopg2-binary',
    'alembic',
]
# X imported but declared as a dev dependency
#DEP004 = []

# -----------------------------------------------------------------------------

[tool.pyright]
exclude = [
    '.nox',
    'tests',
    'sandbox',
    'doc',
    'scripts',
    'tmp',
]
include = ["src"]

# False positives
reportPrivateImportUsage = false
reportFunctionMemberAccess = false

# Enable later
reportGeneralTypeIssues = false
reportIncompatibleMethodOverride = false
reportIncompatibleVariableOverride = false

# -----------------------------------------------------------------------------

[tool.bandit]
skips = [
    "B404", # blacklist
    "B603", # subprocess_without_shell_equals_true
    "B101", # assert_used
    # FIXME later
    "B311", # blacklist
]

exclude_dirs = [
    "tests",
]

# -----------------------------------------------------------------------------

[tool.coverage.run]
# Not needed
# omit = ["tests/*.py", "**/test*.py", "**/*test.py"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    'pragma: no cover',
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
    "raise AssertionError",
    "raise NotImplementedError",
]

